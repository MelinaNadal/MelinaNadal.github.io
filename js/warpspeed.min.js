
	function E(id){
		return document.getElementById(id);
	}
	function V(id){
		return E(id).value;
	}
	String.prototype.isBlank=function(){
		return !this || /^\s*$/.test(this);
	}
	
	function warpEffectChanged(){
		if(V("warpEffect")=="true"){
			E("warpEffectLengthSetting").style.display="";
		}else{
			E("warpEffectLengthSetting").style.display="none";
		}
	}
	
	function applySettings(){
		var s={};
		try{
			s.speed=Number(V("speed"));
			if(isNaN(s.speed)||s.speed<0) throw "Speed";
			s.speedAdjFactor=Number(V("speedAdjFactor"));
			if(isNaN(s.speedAdjFactor)||s.speedAdjFactor<0||s.speedAdjFactor>1) throw "Acceleration Factor";
			s.density=Number(V("density"));
			if(isNaN(s.density)||s.density<0) throw "Density";
			if(V("useCircles")=="true"){
				s.shape="circle";
			}else{
				s.shape="square";
			}
			if(V("warpEffect")=="true"){
				s.warpEffect=true;
				s.warpEffectLength=Number(V("warpEffectLength"));
				if(isNaN(s.warpEffectLength)||s.warpEffectLength<0) throw "Warp Effect Length";
			}else{
				s.warpEffect=false;
			}
			s.depthFade=V("depthFade")=="true";
			s.starSize=Number(V("starSize"));
			if(isNaN(s.starSize)||s.starSize<0) throw "Star Size";
			s.backgroundColor=V("backgroundColor");
			var dummy=document.createElement("div");
			dummy.style.backgroundColor=s.backgroundColor;
			document.body.appendChild(dummy);
			if(dummy.style.backgroundColor.isBlank()){
				document.body.removeChild(dummy);
				throw "Background color";
			}else document.body.removeChild(dummy);
			s.starColor=V("starColor");
			dummy=document.createElement("div");
			dummy.style.backgroundColor=s.starColor;
			document.body.appendChild(dummy);
			if(dummy.style.backgroundColor.isBlank()){
				document.body.removeChild(dummy);
				throw "Star color";
			}else document.body.removeChild(dummy);
		}catch(e){
			alert("Invalid "+e);
			return;
		}
		E("json").innerHTML=JSON.stringify(s);
		new WarpSpeed("canvas",s);
	}
